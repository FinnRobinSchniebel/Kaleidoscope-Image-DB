# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  backend:
    build: 
      context: ./
      dockerfile: ./KaleidoscopeBackend/Dockerfile.backend
      target: final
      args:
        BACKEND_VOLUME_LOCATION: ${BACKEND_VOLUME_LOCATION}
    ports:
      - ${SERVERPORT}:${SERVERPORT}
    environment:
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@db:27017
      SERVERPORT: ${SERVERPORT}
      BACKEND_VOLUME_LOCATION: ${BACKEND_VOLUME_LOCATION}
    volumes:
      - Image_data:${BACKEND_VOLUME_LOCATION}
    depends_on:
      - db
  frontend:
    build:
      context: ./KaleidoscopeFrontend
      dockerfile: Dockerfile.frontend
      target: final
    ports: 
      - 3001:80
    depends_on:
      - backend
    #stdin_open:true
    #tty:true

  db:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: KaleidoDB
      
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
volumes:
  mongo_data:
  Image_data:



